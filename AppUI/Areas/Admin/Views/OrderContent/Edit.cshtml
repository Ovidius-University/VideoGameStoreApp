@model ExistentOrderContentDto

@{
    ViewData["Title"] = "Edit";
    int oid = @Model.OrderId;
}

<h1>Modify the order only if the customer agreed</h1>

<h4>@Html.DisplayFor(m => Model.VideoGame)</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="VideoGameId" />
            <input type="hidden" asp-for="CustomerId" />
            <input type="hidden" asp-for="OrderId" />
            <div class="row">
                <div class="form-group mb-3">
                    <label asp-for="UnitPrice" class="control-label"></label>
                    <input asp-for="UnitPrice" class="form-control" />
                    <span asp-validation-for="UnitPrice" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="Quantity" class="control-label"></label>
                    <input asp-for="Quantity" class="form-control" />
                    <span asp-validation-for="Quantity" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Update" class="btn btn-primary" />
                </div>
            </div>
        </form>
    </div>
</div>
<br />
<div>
    <a asp-action="Index" asp-route-oid="@Model.OrderId">Back to list</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
